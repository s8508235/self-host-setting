version: '3.3'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:8080
      - 8081:8081
      - 8084:8084
    depends_on:
      - app
      - memos
    restart: always
    networks:
      - default-network
      - internal-network
    logging:
      driver: "json-file"
      options:
        max-size: 100m
        max-file: "3"
  app:
    image: fireflyiii/core:latest
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: .env
    expose:
      - 8080
    networks:
      - internal-network
    # ports:
    #  - 8080:8080
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
        max-size: 100m
        max-file: "3"
  db:
    image: postgres  
    hostname: fireflyiiidb
    restart: always
    networks:
      - internal-network
    environment:
      - POSTGRES_USER=firefly
      - POSTGRES_PASSWORD={PASSWD}
      - POSTGRES_DB=firefly
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - firefly_iii_db:/var/lib/postgresql/data/pgdata
  memos:
    image: neosmemo/memos:latest
    container_name: memos
    networks:
      - internal-network
    volumes:
      - ~/.memos/:/var/opt/memos
    expose:
      - 5230
  cron:
    image: alpine
    command: sh -c "echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/[TOKEN]\" | crontab - && crond -f -L /dev/stdout"

  migrations:
    image: migrate/migrate:v4.17.0
    networks:
      - internal-network
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations/",
        "-database",
        "postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_USERNAME}?sslmode=disable",
        "up"
      ]
    depends_on:
      - db
  
  gatus:
    image: twinproduction/gatus:v5.10.0
    restart: always
    ports:
      - "8083:8080"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_USERNAME}
    volumes:
      - ./gatus-config:/config
    networks:
      - default-network
      - internal-network
    depends_on:
      migrations:
        condition: service_completed_successfully
  
  paperless-broker:
    env_file: .paperless.env
    image: docker.io/library/redis:7
    restart: unless-stopped
    networks:
      - internal-network
    volumes:
      - redis_data:/data

  paperless-webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.7
    restart: unless-stopped
    depends_on:
      - db
      - paperless-broker
    networks:
      - internal-network
    volumes:
      - paperless_data:/usr/src/paperless/data
      - paperless_media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    env_file: .paperless.example.env

volumes:
  firefly_iii_upload:
  firefly_iii_db:
  redis_data:
  paperless_data:
  paperless_media:

networks:
  internal-network:
    internal: true
  default-network:
    external: true
    name: external-network